branches:
  only:
    - /^v\d+\.\d+\.\d+/ # release builds
    - /^v\d+\.\d+\.\d+-[a-z0-9]*/ #pre release builds

notifications:
  email: false
  slack:
    on_success: change
    if: NOT type = pull_request
    secure: F4IjOE05MyaMOdPRL+r8qhs7jBvv4yDM3RmFKE1zNXnfUOqV4X38oQM1EI+YVsgpMQLj/pxnEB7wcTE4Bf86N6moLssEULCpvAuMVoXj4QbWdomLX+01WbFa6fLVeNQIg45NHrz2XzVBhoKOrMNnl+QI5mbR2AlS5oqsudHsXDnyLzZtd4Y5SDMdYG1zVWM01+oNNjgNfjcCGmOE/K0CnOMl6GPi3X9C34tJ19P2XT7MTDsz1/IfEF7fro2Q8DHEYL9dchJMoisXSkem5z7IDQkGzXsWdWT4NnndUvmd1MlTCE9qgoXDqRf95Qh8sB1Dz08HtvgfaosP2XjtNTfDI9BBYS15Ibw9y7PchAJE1luteNjF35EOy6OgmCLw/YpnweqfuNViBZz+yOPWXVC0kxnPIXKZ1wyH9ibeH6E4hr7a8o9SV/6SiWIlbYF+IR9jPXyTCLP/cc3sYljPWxDnhWFwFdRVIi3PbVAhVu7uWtVUO17Oc9gtGPgs/GrhOMkJfwQPXaudRJDpVZowxTX4x9kefNotlMAMRgq+Drbmgt4eEBiCNp0ITWgh17BiE1U09WS3myuduhoct85+FoVeaUkp1sxzHVtGsNQH0hcz7WcpZyOM+AwistJA/qzeEDQao5zi1eKWPbO2xAhi2rV1bDH6bPf/4lDBwLRqSiwvlWU=

os: linux
dist: bionic
language: minimal

jobs:
  include:
    - &release-artifacts
      if: type IN (api, cron) OR tag IS present
      name: "macOS release artifacts"
      os: osx
      osx_image: xcode12
      language: rust
      rust:
        - stable
      install:
        - source ci/rust-version.sh
        - PATH="/usr/local/opt/coreutils/libexec/gnubin:$PATH"
        - readlink -f .
      script:
        - source ci/env.sh
        - ci/publish-tarball.sh
      deploy:
        - provider: releases
          token: $GITHUB_TOKEN
          skip_cleanup: true
          file_glob: true
          file: travis-release-upload/*
          on:
            tags: true
    - <<: *release-artifacts
      name: "Windows release artifacts"
      os: windows
        - source ci/env.sh
        - .travis/channel_restriction.sh edge beta || travis_terminate 0
        - .travis/affects.sh docs/ .travis || travis_terminate 0
        - cd docs/
        - source .travis/before_install.sh
    #  Linux release artifacts are built by .github/workflow/build-releaase.yml
    # - <<: *release-artifacts
    #   name: "Linux release artifacts"
    #   os: linux
    #   env:
    #     - RUSTFLAGS="-C target-cpu=skylake" # Compile with optimisation for skylake CPU to avoid AVX512 simd, that is not exist at any cpu.
    #   before_install:
    #     - sudo apt-get install libssl-dev libudev-dev
